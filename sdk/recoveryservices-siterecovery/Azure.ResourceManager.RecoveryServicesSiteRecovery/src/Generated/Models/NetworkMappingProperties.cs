// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// Network Mapping Properties.
    /// Serialized Name: NetworkMappingProperties
    /// </summary>
    public partial class NetworkMappingProperties
    {
        /// <summary> Initializes a new instance of NetworkMappingProperties. </summary>
        internal NetworkMappingProperties()
        {
        }

        /// <summary> Initializes a new instance of NetworkMappingProperties. </summary>
        /// <param name="state">
        /// The pairing state for network mapping.
        /// Serialized Name: NetworkMappingProperties.state
        /// </param>
        /// <param name="primaryNetworkFriendlyName">
        /// The primary network friendly name.
        /// Serialized Name: NetworkMappingProperties.primaryNetworkFriendlyName
        /// </param>
        /// <param name="primaryNetworkId">
        /// The primary network id for network mapping.
        /// Serialized Name: NetworkMappingProperties.primaryNetworkId
        /// </param>
        /// <param name="primaryFabricFriendlyName">
        /// The primary fabric friendly name.
        /// Serialized Name: NetworkMappingProperties.primaryFabricFriendlyName
        /// </param>
        /// <param name="recoveryNetworkFriendlyName">
        /// The recovery network friendly name.
        /// Serialized Name: NetworkMappingProperties.recoveryNetworkFriendlyName
        /// </param>
        /// <param name="recoveryNetworkId">
        /// The recovery network id for network mapping.
        /// Serialized Name: NetworkMappingProperties.recoveryNetworkId
        /// </param>
        /// <param name="recoveryFabricArmId">
        /// The recovery fabric ARM id.
        /// Serialized Name: NetworkMappingProperties.recoveryFabricArmId
        /// </param>
        /// <param name="recoveryFabricFriendlyName">
        /// The recovery fabric friendly name.
        /// Serialized Name: NetworkMappingProperties.recoveryFabricFriendlyName
        /// </param>
        /// <param name="fabricSpecificSettings">
        /// The fabric specific settings.
        /// Serialized Name: NetworkMappingProperties.fabricSpecificSettings
        /// Please note <see cref="NetworkMappingFabricSpecificSettings"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureToAzureNetworkMappingSettings"/>, <see cref="VmmToAzureNetworkMappingSettings"/> and <see cref="VmmToVmmNetworkMappingSettings"/>.
        /// </param>
        internal NetworkMappingProperties(string state, string primaryNetworkFriendlyName, string primaryNetworkId, string primaryFabricFriendlyName, string recoveryNetworkFriendlyName, string recoveryNetworkId, string recoveryFabricArmId, string recoveryFabricFriendlyName, NetworkMappingFabricSpecificSettings fabricSpecificSettings)
        {
            State = state;
            PrimaryNetworkFriendlyName = primaryNetworkFriendlyName;
            PrimaryNetworkId = primaryNetworkId;
            PrimaryFabricFriendlyName = primaryFabricFriendlyName;
            RecoveryNetworkFriendlyName = recoveryNetworkFriendlyName;
            RecoveryNetworkId = recoveryNetworkId;
            RecoveryFabricArmId = recoveryFabricArmId;
            RecoveryFabricFriendlyName = recoveryFabricFriendlyName;
            FabricSpecificSettings = fabricSpecificSettings;
        }

        /// <summary>
        /// The pairing state for network mapping.
        /// Serialized Name: NetworkMappingProperties.state
        /// </summary>
        public string State { get; }
        /// <summary>
        /// The primary network friendly name.
        /// Serialized Name: NetworkMappingProperties.primaryNetworkFriendlyName
        /// </summary>
        public string PrimaryNetworkFriendlyName { get; }
        /// <summary>
        /// The primary network id for network mapping.
        /// Serialized Name: NetworkMappingProperties.primaryNetworkId
        /// </summary>
        public string PrimaryNetworkId { get; }
        /// <summary>
        /// The primary fabric friendly name.
        /// Serialized Name: NetworkMappingProperties.primaryFabricFriendlyName
        /// </summary>
        public string PrimaryFabricFriendlyName { get; }
        /// <summary>
        /// The recovery network friendly name.
        /// Serialized Name: NetworkMappingProperties.recoveryNetworkFriendlyName
        /// </summary>
        public string RecoveryNetworkFriendlyName { get; }
        /// <summary>
        /// The recovery network id for network mapping.
        /// Serialized Name: NetworkMappingProperties.recoveryNetworkId
        /// </summary>
        public string RecoveryNetworkId { get; }
        /// <summary>
        /// The recovery fabric ARM id.
        /// Serialized Name: NetworkMappingProperties.recoveryFabricArmId
        /// </summary>
        public string RecoveryFabricArmId { get; }
        /// <summary>
        /// The recovery fabric friendly name.
        /// Serialized Name: NetworkMappingProperties.recoveryFabricFriendlyName
        /// </summary>
        public string RecoveryFabricFriendlyName { get; }
        /// <summary>
        /// The fabric specific settings.
        /// Serialized Name: NetworkMappingProperties.fabricSpecificSettings
        /// Please note <see cref="NetworkMappingFabricSpecificSettings"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AzureToAzureNetworkMappingSettings"/>, <see cref="VmmToAzureNetworkMappingSettings"/> and <see cref="VmmToVmmNetworkMappingSettings"/>.
        /// </summary>
        public NetworkMappingFabricSpecificSettings FabricSpecificSettings { get; }
    }
}
