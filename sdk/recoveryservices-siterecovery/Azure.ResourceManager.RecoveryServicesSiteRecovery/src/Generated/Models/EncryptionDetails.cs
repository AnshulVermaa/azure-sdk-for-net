// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery.Models
{
    /// <summary>
    /// Encryption details for the fabric.
    /// Serialized Name: EncryptionDetails
    /// </summary>
    public partial class EncryptionDetails
    {
        /// <summary> Initializes a new instance of EncryptionDetails. </summary>
        internal EncryptionDetails()
        {
        }

        /// <summary> Initializes a new instance of EncryptionDetails. </summary>
        /// <param name="kekState">
        /// The key encryption key state for the Vmm.
        /// Serialized Name: EncryptionDetails.kekState
        /// </param>
        /// <param name="kekCertThumbprint">
        /// The key encryption key certificate thumbprint.
        /// Serialized Name: EncryptionDetails.kekCertThumbprint
        /// </param>
        /// <param name="kekCertExpiryOn">
        /// The key encryption key certificate expiry date.
        /// Serialized Name: EncryptionDetails.kekCertExpiryDate
        /// </param>
        internal EncryptionDetails(string kekState, string kekCertThumbprint, DateTimeOffset? kekCertExpiryOn)
        {
            KekState = kekState;
            KekCertThumbprint = kekCertThumbprint;
            KekCertExpiryOn = kekCertExpiryOn;
        }

        /// <summary>
        /// The key encryption key state for the Vmm.
        /// Serialized Name: EncryptionDetails.kekState
        /// </summary>
        public string KekState { get; }
        /// <summary>
        /// The key encryption key certificate thumbprint.
        /// Serialized Name: EncryptionDetails.kekCertThumbprint
        /// </summary>
        public string KekCertThumbprint { get; }
        /// <summary>
        /// The key encryption key certificate expiry date.
        /// Serialized Name: EncryptionDetails.kekCertExpiryDate
        /// </summary>
        public DateTimeOffset? KekCertExpiryOn { get; }
    }
}
